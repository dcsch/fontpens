import XCTest
@testable import FontPens

final class PensTests: XCTestCase {
  
  func testLogPen() {
    var pen = DigestPointPen()
    XCTAssertNoThrow(pen.beginPath(identifier: "first"))
    XCTAssertNoThrow(pen.addPoint(CGPoint(x: 0, y: 0), segmentType: .line, smooth: false))
    XCTAssertNoThrow(pen.addPoint(CGPoint(x: 100, y: 0), segmentType: .line, smooth: false))
    XCTAssertNoThrow(pen.addPoint(CGPoint(x: 100, y: 100), segmentType: .line, smooth: false))
    XCTAssertNoThrow(pen.endPath())
    
    XCTAssertEqual(pen.digest[0], .beginPath("first"))
    XCTAssertEqual(pen.digest[1], .point(CGPoint(x: 0.0, y: 0.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[2], .point(CGPoint(x: 100.0, y: 0.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[3], .point(CGPoint(x: 100.0, y: 100.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[4], .endPath)
  }
  
  func functionUsingPointPen<T: PointPen>(pointPen: inout T) {
    XCTAssertNoThrow(try pointPen.beginPath(identifier: "first"))
    XCTAssertNoThrow(try pointPen.addPoint(CGPoint(x: 0, y: 0), segmentType: .line, smooth: false, name: nil, identifier: nil))
    XCTAssertNoThrow(try pointPen.addPoint(CGPoint(x: 100, y: 0), segmentType: .line, smooth: false, name: nil, identifier: nil))
    XCTAssertNoThrow(try pointPen.addPoint(CGPoint(x: 100, y: 100), segmentType: .line, smooth: false, name: nil, identifier: nil))
    XCTAssertNoThrow(try pointPen.endPath())
  }
  
  func testPenFunction() {
    var pen = DigestPointPen()
    functionUsingPointPen(pointPen: &pen)
    XCTAssertEqual(pen.digest[0], .beginPath("first"))
    XCTAssertEqual(pen.digest[1], .point(CGPoint(x: 0.0, y: 0.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[2], .point(CGPoint(x: 100.0, y: 0.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[3], .point(CGPoint(x: 100.0, y: 100.0), .line, false, nil, nil))
    XCTAssertEqual(pen.digest[4], .endPath)
  }

  static var allTests = [
    ("testLogPen", testLogPen),
  ]
}
